{"version":3,"file":"static/js/185.121c8b3d.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Input/Input.styled.jsx","components/Input/Input.jsx","components/FormHistory/validationSchema.js","components/FormHistory/Form.styled.jsx","components/FormHistory/Form.jsx","page/HistoryPage/HistoryPage.styled.jsx","page/HistoryPage/HistoryPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport Button from '@mui/material/Button';\n\nexport const Btn = styled(Button)`\n  display: block;\n  min-width: 200px;\n  padding: 13px 25px;\n  background: #a14545;\n  color: white;\n  border: 3px solid #6e1c1c;\n  outline: none;\n  border-radius: 30px;\n  font-family: 'Verdana';\n  font-weight: 700;\n  font-size: 14px;\n  text-transform: none;\n  transition-property: transform;\n  &:hover {\n    background: radial-gradient(\n      circle,\n      rgba(63, 94, 251, 1) 0%,\n      rgba(252, 70, 107, 1) 100%\n    );\n    border: 3px solid #6e1c1c;\n    transition-duration: 300ms;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import { Btn } from './Button.styled';\n\nexport default function Button({ text, type = 'button', onClick }) {\n  return (\n    <Btn type={type} onClick={onClick}>\n      {text}\n    </Btn>\n  );\n}\n","import { styled } from '@mui/material/styles';\nimport { TextField } from '@mui/material';\n\nconst CastomTextField = styled(TextField)({\n  '& ': {\n    marginBottom: '20px',\n    minWidth: '240px',\n  },\n  '& label': {\n    color: '#af4747',\n    fontFamily: 'Verdana',\n    fontWeight: 700,\n    fontSize: '18px',\n    lineHeight: '1.4',\n    letterSpacing: '0.04em',\n  },\n  '& label.Mui-focused': {\n    color: '#a14545',\n  },\n  '& .MuiInput-underline:before': {\n    borderBottom: '1px solid #E0E0E0',\n  },\n\n  '& .MuiInput-underline:after': {\n    borderBottomColor: '#a14545',\n  },\n});\n\nexport { CastomTextField };\n","import { CastomTextField } from './Input.styled';\n\nexport default function Input({\n  id = '',\n  name = '',\n  type = 'text',\n  label = '',\n  value = null,\n  onChange = null,\n  error = false,\n  helperText = '',\n  inputRef,\n}) {\n  return (\n    <CastomTextField\n      id={id}\n      name={name}\n      type={type}\n      label={label}\n      value={value}\n      onChange={onChange}\n      error={error}\n      helperText={helperText}\n      inputRef={inputRef}\n    />\n  );\n}\n","import * as yup from 'yup';\n\nexport const validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .min(3, 'Email should be of min 3 characters length')\n    .max(254, 'Email should be of max 254 characters length')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  phone: yup\n    .number('Enter your phone')\n    // .min(9, 'Phone should be of min 10 characters length')\n    // .max(13, 'Phone should be of max 13 characters length')\n    .required('Phone is required'),\n});\n\nexport const validationSchemaDistance = yup.object({\n  address: yup\n    .string('Enter your address')\n    .min(3, 'address should be of min 3 characters length')\n    .max(254, 'address should be of max 254 characters length')\n    .required('address is required'),\n});\n","import styled from '@emotion/styled';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  padding: 0 50px;\n`;\n\nconst BoxButton = styled.div`\n  margin: auto;\n`;\n\nexport { Form, BoxButton };\n","import { validationSchema } from './validationSchema';\nimport { BoxButton, Form } from './Form.styled';\nimport { useFormik } from 'formik';\nimport Button from '../Button/Button';\nimport { toast } from 'react-toastify';\nimport Input from 'components/Input/Input';\n\nexport default function FormHistory() {\n  async function searchOrders(userInfo) {\n    try {\n    } catch (error) {\n      toast.error(error, {\n        position: 'top-center',\n        autoClose: 3000,\n        theme: 'colored',\n      });\n    }\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      phone: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values, { resetForm }) => {\n      searchOrders(values);\n      resetForm();\n    },\n  });\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Input\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        label=\"Email *\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n      />\n\n      <Input\n        id=\"phone\"\n        name=\"phone\"\n        type=\"phone\"\n        label=\"Phone *\"\n        value={formik.values.phone}\n        onChange={formik.handleChange}\n        error={formik.touched.phone && Boolean(formik.errors.phone)}\n        helperText={formik.touched.phone && formik.errors.phone}\n      />\n      <BoxButton>\n        <Button type=\"submit\" text=\"Submit\" />\n      </BoxButton>\n    </Form>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 6fr;\n  grid-column-gap: 20px;\n  justify-content: center;\n  padding: 50px 200px;\n`;\n","import FormHistory from 'components/FormHistory/Form';\nimport { Box } from './HistoryPage.styled';\n\nexport default function HistoryPage() {\n  return (\n    <Box>\n      <FormHistory />\n    </Box>\n  );\n}\n"],"names":["Btn","styled","Button","text","type","onClick","CastomTextField","TextField","marginBottom","minWidth","color","fontFamily","fontWeight","fontSize","lineHeight","letterSpacing","borderBottom","borderBottomColor","Input","id","name","label","value","onChange","error","helperText","inputRef","validationSchema","yup","email","min","max","required","phone","address","Form","BoxButton","FormHistory","searchOrders","userInfo","formik","useFormik","initialValues","onSubmit","values","resetForm","handleSubmit","handleChange","touched","Boolean","errors","Box","HistoryPage"],"sourceRoot":""}