{"version":3,"file":"static/js/83.2f1eedad.chunk.js","mappings":"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","sources":["page/ShoppingCartPage/ShoppingCart.styled.jsx","components/ShoppingCart/ShoppingCart.styled.jsx","components/Counter/Counter.styled.jsx","components/Counter/Counter.jsx","components/Form/validationSchema.js","components/Form/Form.styled.jsx","components/Form/Input.styled.jsx","components/Form/Button.styled.jsx","components/Form/Form.jsx","components/ShoppingCart/ShoppingCart.jsx","page/ShoppingCartPage/ShoppingCartPage.jsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const Box = styled.div`\n  min-height: 70vh;\n  padding: 50px 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n","import styled from 'styled-components';\nimport { GiShoppingCart } from 'react-icons/gi';\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 1200px;\n  background: #2c7c75;\n  border-radius: 70px;\n  border: medium inset #6b98a6;\n  padding: 20px;\n  height: 590px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  justify-content: center;\n  margin-left: -15px;\n  margin-top: -15px;\n  padding: 10px;\n  overflow-y: scroll;\n  scroll-behavior: auto;\n  &::-webkit-scrollbar {\n    width: 5px;\n  }\n\n  &::-webkit-scrollbar-track {\n    -webkit-box-shadow: 5px 5px 5px -5px rgba(34, 60, 80, 0.2) inset;\n    background-color: #2c7c75;\n    border-radius: 100%;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 100%;\n    background: linear-gradient(180deg, #00b1a8, #8ec5b6);\n  }\n`;\nexport const ItemShop = styled.li`\n  min-width: 1000px;\n  background: rgba(129, 129, 129, 0.52);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-shadow: inset 0px -8px 10px 0px #97bdb6;\n  padding: 15px 20px;\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\nexport const CafeName = styled.p`\n  font-size: 24px;\n  min-height: 70px;\n`;\nexport const Price = styled.p`\n  font-size: 26px;\n  margin-bottom: 20px;\n`;\n\nexport const Image = styled.img`\n  border: 2px solid black;\n  width: 150px;\n  height: 150px;\n  margin-bottom: 5px;\n`;\n\nexport const Title = styled.h1`\n  display: block;\n  font-size: 26px;\n  color: #363b39;\n  text-shadow: #f3c4c4 2px 0 2px;\n  margin-bottom: 20px;\n`;\nexport const BoxPrice = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 240px;\n`;\nexport const Button = styled.button`\n  padding: 5px 10px;\n  background: #a14545;\n  cursor: pointer;\n  border: 3px solid #6e1c1c;\n  font-size: 20px;\n  border-radius: 65px;\n\n  &:hover {\n    background: radial-gradient(\n      circle,\n      rgba(63, 94, 251, 1) 0%,\n      rgba(252, 70, 107, 1) 100%\n    );\n    border: 3px solid #6e1c1c;\n    transition-duration: 300ms;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const Icon = styled(GiShoppingCart)`\n  width: 300px;\n  height: 300px;\n  color: #8d4b4b;\n  display: block;\n`;\n","import styled from 'styled-components';\nexport const Button = styled.button`\n  padding: 5px 10px;\n  background: #a14545;\n  cursor: pointer;\n  border: 3px solid #6e1c1c;\n  font-size: 20px;\n  border-radius: 65px;\n  width: 40px;\n  &:not(:last-child){\n    margin-right: 20px;\n  }\n\n  &:hover {\n    background: radial-gradient(circle, rgba(63, 94, 251, 1) 0%, rgba(252, 70, 107, 1) 100%);\n    border: 1px solid #6e1c1c;\n    transition-duration: 300ms;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`\n","\nimport { useDispatch } from 'react-redux';\nimport { decrement, increment } from '../../redux/shoppingCartSlice';\nimport { Button } from './Counter.styled';\n\nexport default function Counter({dish}) {\n  const dispatch = useDispatch();\n  function incrementFood(){\n    dispatch(increment(dish));\n  }\n\n  function decrementFood(){\n    dispatch(decrement(dish));\n  }\n\n  return (\n    <div>\n    <Button type='button' onClick={() => decrementFood()} disabled={dish.qty < 1}>\n      -\n    </Button>\n    <Button type='button' onClick={() => incrementFood()} disabled={dish.qty > 9}>\n      +\n    </Button>\n  </div>\n)\n}\n","import * as yup from 'yup';\n\nexport const validationSchema = yup.object({\n  name: yup\n    .string('Enter your name')\n    .min(3, 'Name should be of min 3 characters length')\n    .max(254, 'Name should be of max 254 characters length')\n    .required('Name is required'),\n  email: yup\n    .string('Enter your email')\n    .min(3, 'Email should be of min 3 characters length')\n    .max(254, 'Email should be of max 254 characters length')\n    .email('Enter a valid email'),\n  phone: yup\n    .number('Enter your phone')\n    // .min(9, 'Phone should be of min 10 characters length')\n    // .max(13, 'Phone should be of max 13 characters length')\n    .required('Phone is required'),\n  address: yup\n    .string('Enter your address')\n    .min(3, 'address should be of min 3 characters length')\n    .max(254, 'address should be of max 254 characters length')\n    .required('address is required'),\n});\n","import styled from 'styled-components/macro';\n\nconst Form = styled.form`\n  min-width: 500px;\n  max-width: 800px;\n  display: flex;\n  flex-direction: column;\n  background: #2c7c75;\n  border-radius: 70px;\n  border: medium inset #6b98a6;\n  padding: 50px ;\n`;\n\nconst BoxButton = styled.div`\n  margin: auto;\n  margin-top: 60px;\n\n`;\n\nexport { Form, BoxButton };\n","import { styled } from '@mui/material/styles';\nimport { TextField } from '@mui/material';\n\nconst CastomTextField = styled(TextField)({\n  '& ': {\n    marginBottom: '20px',\n    minWidth: '240px',\n  },\n  '& label': {\n    color: '#af4747',\n    fontFamily: 'Verdana',\n    fontWeight: 700,\n    fontSize: '18px',\n    lineHeight: '1.4',\n    letterSpacing: '0.04em',\n  },\n  '& label.Mui-focused': {\n    color: '#a14545',\n  },\n  '& .MuiInput-underline:before': {\n    borderBottom: '1px solid #E0E0E0',\n  },\n\n  '& .MuiInput-underline:after': {\n    borderBottomColor: '#a14545',\n  },\n});\n\nexport { CastomTextField };\n","import styled from '@emotion/styled';\nimport Button from '@mui/material/Button';\n\nexport const Btn = styled(Button)`\n  display: block;\n  min-width: 176px;\n  padding: 13px 25px;\n  background: #a14545;\n  color: white;\n  border: 3px solid #6e1c1c;\n  outline: none;\n  border-radius: 30px;\n  font-family: 'Verdana';\n  font-weight: 700;\n  font-size: 14px;\n  text-transform: none;\n  transition-property: transform;\n  &:hover {\n    background: radial-gradient(circle, rgba(63, 94, 251, 1) 0%, rgba(252, 70, 107, 1) 100%);\n    border: 3px solid #6e1c1c;\n    transition-duration: 300ms;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import { validationSchema } from './validationSchema';\nimport { BoxButton, Form } from './Form.styled';\nimport { useFormik } from 'formik';\nimport { CastomTextField } from './Input.styled';\nimport { Btn } from './Button.styled';\nimport { toast } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nexport default function FormDelivery({dish}) {\n  const [userInfo, setUserInfo] = useState(null);\n  const shopping = useSelector((state) => state.shoppingCart.items);\n\n  useEffect(()=>{\n    (async function(){\n      await fetch(`/api/add_worker`, {\n        method: \"POST\",\n        mode: \"cors\",\n        body: JSON.stringify({...userInfo, order: shopping})\n      })\n    })()\n  },[userInfo, shopping])\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      phone: '',\n      address: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values, { resetForm }) => {\n      setUserInfo(values);\n      toast.success('Order successfully created!', {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"colored\",\n      });\n      resetForm();\n    },\n  });\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <CastomTextField\n        id=\"name\"\n        name=\"name\"\n        type='text'\n        label='Name *'\n        value={formik.values.name}\n        onChange={formik.handleChange}\n        error={formik.touched.name && Boolean(formik.errors.name)}\n        helperText={formik.touched.name && formik.errors.name}\n      />\n      <CastomTextField\n        id=\"email\"\n        name=\"email\"\n        type='email'\n        label='Email'\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n      />\n      <CastomTextField\n        id=\"phone\"\n        name=\"phone\"\n        type='phone'\n        label='Phone *'\n        value={formik.values.phone}\n        onChange={formik.handleChange}\n        error={formik.touched.phone && Boolean(formik.errors.phone)}\n        helperText={formik.touched.phone && formik.errors.phone}\n      />\n      <CastomTextField\n        id=\"address\"\n        name=\"address\"\n        type='address'\n        label='Address *'\n        value={formik.values.address}\n        onChange={formik.handleChange}\n        error={formik.touched.address && Boolean(formik.errors.address)}\n        helperText={formik.touched.address && formik.errors.address}\n      />\n      <BoxButton>\n        <Btn variant='contained' type=\"submit\" >\n          \"Submit\"\n        </Btn>\n      </BoxButton>\n    </Form>\n)\n}\n","import {\n  Box,\n  CafeName,\n  Image,\n  ItemShop,\n  List,\n  Price,\n  Title,\n  BoxPrice,\n  Button,\n  Icon,\n} from './ShoppingCart.styled';\n\nimport { useSelector } from 'react-redux';\nimport Counter from '../Counter/Counter';\nimport { useState } from 'react';\nimport FormDelivery from '../Form/Form';\n\nexport default function ShoppingCart() {\n  const shopping = useSelector(state => state.shoppingCart.items);\n  const total = shopping.reduce((acc, dish) => acc + dish.price * dish.qty, 0);\n  const [userForm, setUserForm] = useState(false);\n\n  return (\n    <>\n      {!userForm ? (\n        <Box>\n          {shopping.length > 0 ? (\n            <>\n              <Title>Shopping Cart</Title>\n              <List>\n                {shopping.map(dish => (\n                  <ItemShop key={dish.name}>\n                    <Image src={dish.url} alt={dish.name} />\n                    <BoxPrice>\n                      <CafeName>{dish.name}</CafeName>\n                      <Price>\n                        {dish.qty} * {dish.price} грн\n                      </Price>\n                      <Counter dish={dish} />\n                    </BoxPrice>\n                  </ItemShop>\n                ))}\n              </List>\n              <Title>Total price: {total} грн</Title>\n              <Button type=\"button\" onClick={() => setUserForm(true)}>\n                Confirm\n              </Button>\n            </>\n          ) : (\n            <>\n              <Title>Shopping Cart is empty</Title>\n              <Icon />\n            </>\n          )}\n        </Box>\n      ) : (\n        <FormDelivery />\n      )}\n    </>\n  );\n}\n","\nimport { Box} from './ShoppingCart.styled';\nimport ShoppingCart from '../../components/ShoppingCart/ShoppingCart';\n\n\nexport default function ShoppingCartPage(){\n  return(\n    <Box>\n      <ShoppingCart/>\n  </Box>)\n}\n"],"names":["Box","styled","List","ItemShop","CafeName","Price","Image","Title","BoxPrice","Button","Icon","GiShoppingCart","Counter","dish","dispatch","useDispatch","type","onClick","decrement","disabled","qty","increment","validationSchema","yup","name","min","max","required","email","phone","address","Form","BoxButton","CastomTextField","TextField","marginBottom","minWidth","color","fontFamily","fontWeight","fontSize","lineHeight","letterSpacing","borderBottom","borderBottomColor","Btn","FormDelivery","useState","userInfo","setUserInfo","shopping","useSelector","state","shoppingCart","items","useEffect","fetch","method","mode","body","JSON","stringify","order","formik","useFormik","initialValues","onSubmit","values","resetForm","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","handleSubmit","id","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","variant","ShoppingCart","total","reduce","acc","price","userForm","setUserForm","length","map","src","url","alt","ShoppingCartPage"],"sourceRoot":""}